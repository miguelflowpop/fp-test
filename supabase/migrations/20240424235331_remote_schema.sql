
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

COMMENT ON SCHEMA "public" IS 'standard public schema';

CREATE EXTENSION IF NOT EXISTS "http" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE OR REPLACE FUNCTION "public"."hello"() RETURNS "text"
    LANGUAGE "sql"
    AS $$
select 'hello world';
$$;

ALTER FUNCTION "public"."hello"() OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."business" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone,
    "deleted_at" timestamp with time zone,
    "name" character varying NOT NULL,
    CONSTRAINT "business_name_check" CHECK (("length"(("name")::"text") <= 255))
);

ALTER TABLE "public"."business" OWNER TO "postgres";

ALTER TABLE "public"."business" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."business_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."folder" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone,
    "deleted_at" timestamp with time zone,
    "name" character varying NOT NULL,
    "space_id" bigint NOT NULL
);

ALTER TABLE "public"."folder" OWNER TO "postgres";

ALTER TABLE "public"."folder" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."folder_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."list" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone,
    "deleted_at" timestamp with time zone,
    "name" character varying NOT NULL,
    "folder_id" bigint NOT NULL,
    "flow_id" "text",
    "flow_start_screen_name" "text"
);

ALTER TABLE "public"."list" OWNER TO "postgres";

ALTER TABLE "public"."list" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."list_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."report_invocation" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "flow_token" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "list_id" bigint,
    "user" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "wamid" "text",
    "sent_timestamp" timestamp with time zone,
    "delivered_timestamp" timestamp with time zone,
    "response_timestamp" timestamp with time zone,
    "response_json" "json"
);

ALTER TABLE "public"."report_invocation" OWNER TO "postgres";

ALTER TABLE "public"."report_invocation" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."report_invocation_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."space" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone,
    "deleted_at" timestamp with time zone,
    "name" character varying NOT NULL,
    "business_id" bigint NOT NULL
);

ALTER TABLE "public"."space" OWNER TO "postgres";

ALTER TABLE "public"."space" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."space_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."business"
    ADD CONSTRAINT "business_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."business"
    ADD CONSTRAINT "business_name_key" UNIQUE ("name");

ALTER TABLE ONLY "public"."business"
    ADD CONSTRAINT "business_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."folder"
    ADD CONSTRAINT "folder_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."folder"
    ADD CONSTRAINT "folder_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."list"
    ADD CONSTRAINT "list_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."list"
    ADD CONSTRAINT "list_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."report_invocation"
    ADD CONSTRAINT "report_invocation_flow_token_key" UNIQUE ("flow_token");

ALTER TABLE ONLY "public"."report_invocation"
    ADD CONSTRAINT "report_invocation_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."space"
    ADD CONSTRAINT "space_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."space"
    ADD CONSTRAINT "space_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."folder"
    ADD CONSTRAINT "public_folder_space_id_fkey" FOREIGN KEY ("space_id") REFERENCES "public"."space"("id");

ALTER TABLE ONLY "public"."list"
    ADD CONSTRAINT "public_list_folder_id_fkey" FOREIGN KEY ("folder_id") REFERENCES "public"."folder"("id");

ALTER TABLE ONLY "public"."report_invocation"
    ADD CONSTRAINT "public_report_invocation_list_fkey" FOREIGN KEY ("list_id") REFERENCES "public"."list"("id");

ALTER TABLE ONLY "public"."space"
    ADD CONSTRAINT "public_space_business_id_fkey" FOREIGN KEY ("business_id") REFERENCES "public"."business"("id");

ALTER TABLE "public"."business" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."folder" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."list" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."report_invocation" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."space" ENABLE ROW LEVEL SECURITY;

ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON FUNCTION "public"."hello"() TO "anon";
GRANT ALL ON FUNCTION "public"."hello"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."hello"() TO "service_role";

GRANT ALL ON TABLE "public"."business" TO "anon";
GRANT ALL ON TABLE "public"."business" TO "authenticated";
GRANT ALL ON TABLE "public"."business" TO "service_role";

GRANT ALL ON SEQUENCE "public"."business_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."business_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."business_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."folder" TO "anon";
GRANT ALL ON TABLE "public"."folder" TO "authenticated";
GRANT ALL ON TABLE "public"."folder" TO "service_role";

GRANT ALL ON SEQUENCE "public"."folder_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."folder_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."folder_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."list" TO "anon";
GRANT ALL ON TABLE "public"."list" TO "authenticated";
GRANT ALL ON TABLE "public"."list" TO "service_role";

GRANT ALL ON SEQUENCE "public"."list_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."list_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."list_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."report_invocation" TO "anon";
GRANT ALL ON TABLE "public"."report_invocation" TO "authenticated";
GRANT ALL ON TABLE "public"."report_invocation" TO "service_role";

GRANT ALL ON SEQUENCE "public"."report_invocation_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."report_invocation_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."report_invocation_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."space" TO "anon";
GRANT ALL ON TABLE "public"."space" TO "authenticated";
GRANT ALL ON TABLE "public"."space" TO "service_role";

GRANT ALL ON SEQUENCE "public"."space_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."space_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."space_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
